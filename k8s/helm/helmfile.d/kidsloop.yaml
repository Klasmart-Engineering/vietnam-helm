environments:
  vietnam-alpha:
    values:
      - ../../../env/vietnam-alpha/.env.yaml
  vietnam-beta:
    values:
      - ../../../env/vietnam-beta/.env.yaml
  vietnam-production:
    values:
      - ../../../env/vietnam-production/.env.yaml      
  indonesia-staging:
    values:
      - ../../../env/indonesia-staging/.env.yaml
  indonesia-production:
    values:
      - ../../../env/indonesia-production/.env.yaml

releases:

  # ECR TOKEN
  # ---------------------------------------------------------------------------------------
  # This provides an cron job which refreshes the AWS ECR token to allow download of docker 
  # images from the Kidsloop docker ECR.

  - name: ecr-token
    namespace: {{ .Values.k8s_namespace_kidsloop }}
    chart: ../charts/ecr-token
    version: ~0.1.0
    values:
      - suffix: ""
      - image: {{ .Values.ecr_token_repository }}
      - resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 200m
            memory: 200Mi

  # ECR TOKEN - VIETNAM
  # ---------------------------------------------------------------------------------------
  # This provides an cron job which refreshes the AWS ECR token to allow download of docker 
  # images from the Kidsloop docker ECR.
 
  - name: ecr-token-vn
    namespace: {{ .Values.k8s_namespace_kidsloop }}
    chart: ../charts/ecr-token
    version: ~0.1.0
    condition: helm_ecr_token_vietnam.enabled
    values:
      - suffix: "-vn"
      - image: {{ .Values.ecr_token_vn_repository }}
      - resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 200m
            memory: 200Mi



  - name: ecr-token-infra
    namespace: {{ .Values.k8s_namespace_kidsloop }}
    chart: ../charts/ecr-token
    version: ~0.1.0
    condition: helm_ecr_token_infra.enabled
    values:
      - suffix: "-infra"
      - image: {{ .Values.ecr_token_infra_repository }}
      - resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 200m
            memory: 200Mi           



  - name: mysql-backup
    namespace: {{ .Values.k8s_namespace_kidsloop }}
    chart: ../charts/mysql-backup
    version: ~0.1.0
    condition: helm_db_backup.enabled
    values:
      - image: {{ .Values.mysql_backup_repository }}
      - mysql_host: {{ .Values.mysql_host }}
      - mysql_username: {{ .Values.mysql_username }}
      - mysql_database: {{ .Values.mysql_database }}
      - storage_endpoint: {{ .Values.helm_db_backup.endpoint }}
      - storage_region: {{ .Values.helm_db_backup.region }}
      - storage_bucket: {{ .Values.helm_db_backup.bucket }}
      - resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 200m
            memory: 200Mi    



  - name: postgresql-backup
    namespace: {{ .Values.k8s_namespace_kidsloop }}
    chart: ../charts/postgresql-backup
    version: ~0.1.0
    condition: helm_db_backup.enabled
    values:
      - image: {{ .Values.postgresql_backup_repository }}
      - postgresql_host: {{ .Values.postgresql_host }}
      - postgresql_username: {{ .Values.postgresql_username }}
      - postgresql_database: {{ .Values.postgresql_database }}
      - storage_endpoint: {{ .Values.helm_db_backup.endpoint }}
      - storage_region: {{ .Values.helm_db_backup.region }}
      - storage_bucket: {{ .Values.helm_db_backup.bucket }}
      - resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 200m
            memory: 200Mi 
  
  
  
  # HUB
  # ---------------------------------------------------------------------------------------
  # Only deploy to BizFlyCloud - on other clouds depoy to Storage bucket and CDN  
  
  - name: hub
    namespace: {{ .Values.k8s_namespace_kidsloop }}
    chart: ../charts/hub
    values:
      - provider: {{ .Values.provider }}
      - serviceType: {{ .Values.k8s_service_type }}
      - imagePullSecrets:
          - name: {{ .Values.hub_image_pull_secrets }}
      - image:
          repository: {{ .Values.hub_image_repository }}
          tag: {{ .Values.hub_image_tag }}
      - ingress:
          tls:
            - endpoint:
                hosts:
                  - hub{{ .Values.kl_domain }}      
                secretName: "letsencrypt-hub{{ .Values.kl_domain }}" 
          hosts:
            - host: hub{{ .Values.kl_domain }}
              paths:
                - "/"
      - resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits:
            cpu: 200m
            memory: 400Mi



  # KL2
  # ---------------------------------------------------------------------------------------
  
  - name: cms-backend
    namespace: {{ .Values.k8s_namespace_kidsloop }}
    chart: ../charts/cms-backend
    values:
      - provider: {{ .Values.provider }}
      - serviceType: {{ .Values.k8s_service_type }}
      - image:
          repository: {{ .Values.cms_backend_image_repository }} # e.g. 242787759841.dkr.ecr.ap-southeast-1.amazonaws.com/kidsloop-user-sre-dev | 494634321140.dkr.ecr.ap-northeast-2.amazonaws.com/vietnam-user-service
          tag: {{ .Values.cms_backend_image_tag }}
      - imagePullSecrets:
          - name: {{ .Values.cms_backend_image_pull_secrets }}      
      {{- if eq .Values.provider "gcp" }}
      - project: {{ .Environment.Values.terraform_project }}
      - region: {{ .Environment.Values.terraform_region }}
      - db_instance: {{ .Environment.Values.gcp.mysql.name }}
      - mysql_proxy_ip:  {{ .Environment.Values.mysql_proxy_ip}}
      {{- end}}
      - ingress:
          tls:
            - endpoint:
                hosts:
                  - cms{{ .Values.kl_domain }}
                secretName: "letsencrypt-cms{{ .Values.kl_domain }}"
          hosts:
            - host: cms{{ .Values.kl_domain }}
              paths:
                - "/v1"
      - resources:
          requests:
            cpu: 250m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi

      - configuration:
          db_hostname: {{ .Values.mysql_host }}
          db_name: {{ .Values.mysql_database }}
          db_username: {{ .Values.mysql_username }}
          redis_host: {{ .Values.redis_host }}
          ams_endpoint: https://api{{ .Values.kl_domain }}/user
          cors_domain_list: https://hub{{ .Values.kl_domain }}
          {{ if .Values.storage }}
          storage_accelerate: "true"
          storage_endpoint: {{ .Values.storage.endpoint }}
          storage_region: {{ .Values.storage.region }}
          storage_bucket: {{ .Values.storage.bucket }}
          storage_protocol: {{ .Values.storage.protocol }}
          storage_download_mode: {{ .Values.storage.download_mode }}
          cdn_path: {{ .Values.storage.cdn_path }}
          {{ end }}
          # This should be removed with new image
          ams_assessment_jwt_public_key_path: ./jwt_public_key.pem
          


  # CMS FRONTEND
  # ---------------------------------------------------------------------------------------
  
  - name: cms-frontend
    namespace: {{ .Values.k8s_namespace_kidsloop }}
    chart: ../charts/cms-frontend
    values:
      - provider: {{ .Values.provider }}
      - serviceType: {{ .Values.k8s_service_type }}
      - image:
          repository: {{ .Values.cms_frontend_image_repository }} # e.g. 242787759841.dkr.ecr.ap-southeast-1.amazonaws.com/kidsloop-user-sre-dev | 494634321140.dkr.ecr.ap-northeast-2.amazonaws.com/vietnam-user-service
          tag: {{ .Values.cms_frontend_image_tag }}
      - imagePullSecrets:
          - name: {{ .Values.cms_frontend_image_pull_secrets }}
      - ingress:
          tls:
            - endpoint:
                hosts:
                  - cms{{ .Values.kl_domain }}
                secretName: "letsencrypt-cms{{ .Values.kl_domain }}"
          hosts:
            - host: cms{{ .Values.kl_domain }}
              paths:
                - "/"
      - resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits:
            cpu: 200m
            memory: 400Mi
 
 
 
  # LIVE BACKEND
  # ---------------------------------------------------------------------------------------

  - name: live-backend
    namespace: {{ .Values.k8s_namespace_kidsloop }}
    chart: ../charts/live-backend
    values:
      - provider: {{ .Values.provider }}
      - serviceType: {{ .Values.k8s_service_type }}
      - prometheus_enabled: {{ .Values.helm_prometheus.enabled }}
      - image:
          repository: {{ .Values.live_backend_image_repository }} # e.g. 242787759841.dkr.ecr.ap-southeast-1.amazonaws.com/kidsloop-user-sre-dev | 494634321140.dkr.ecr.ap-northeast-2.amazonaws.com/vietnam-user-service
          tag: {{ .Values.live_backend_image_tag }}
      - imagePullSecrets:
          - name: {{ .Values.live_backend_image_pull_secrets }}
      - ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt"
          tls:
            - endpoint:
                hosts:
                  - live{{ .Values.kl_domain }}
                secretName: "letsencrypt-live{{ .Values.kl_domain }}"
          hosts:
            - host: live{{ .Values.kl_domain }}
              paths:
                - "/graphql"
      - resources:
          requests:
            cpu: 250m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
      - redisHost: {{ .Values.redis_host }}



  # SFU
  # ---------------------------------------------------------------------------------------

  - name: sfu
    namespace: {{ .Values.k8s_namespace_kidsloop }}
    chart: ../charts/sfu
    values:
      - sfuManagerImage:
          repository: {{ .Values.sfu_manager_image_repository }}
          tag: {{ .Values.sfu_manager_image_tag }}
          imagePullSecrets:
            - name: {{ .Values.sfu_manager_image_pull_secrets }}
      - sfuImage:
          repository: {{ .Values.sfu_image_repository }}
          tag: {{ .Values.sfu_image_tag | default "latest" }}
          imagePullSecrets:
            - name: {{ .Values.sfu_image_pull_secrets }}
      - provider: {{ .Values.provider }}
      - serviceType: {{ .Values.k8s_service_type }}
      - hostNetworking: true
      - resources:
          requests:
            cpu: 250m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
      - sfuManagerConfiguration:
          promHost: {{ .Values.prometheus_host }}
      - redisHost: {{ .Values.redis_host }}



  # SFU-GATEWAY
  # ---------------------------------------------------------------------------------------

  - name: sfu-gateway
    namespace: {{ .Values.k8s_namespace_kidsloop }}
    chart: ../charts/sfu-gateway
    values:
      - provider: {{ .Values.provider }}
      - serviceType: {{ .Values.k8s_service_type }}
      - image:
          repository: {{ .Values.sfu_gateway_image_repository }}
          tag: {{ .Values.sfu_gateway_image_tag }}
      - imagePullSecrets:
          - name: {{ .Values.sfu_gateway_image_pull_secrets }}
      - ingress:
          tls:
            - endpoint:
                hosts:
                  - live{{ .Values.kl_domain }}
                secretName: "letsencrypt-live{{ .Values.kl_domain }}"
          hosts:
            - host: live{{ .Values.kl_domain }}
              paths:
                - "/sfu"
      - resources:
          requests:
            cpu: 250m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
      - redisHost: {{ .Values.redis_host }}


      
  # LIVE FRONTEND
  # ---------------------------------------------------------------------------------------

  - name: live-frontend
    namespace: {{ .Values.k8s_namespace_kidsloop }}
    chart: ../charts/live-frontend
    values:
      - provider: {{ .Values.provider }}
      - serviceType: {{ .Values.k8s_service_type }}
      - image:
          repository: {{ .Values.live_frontend_image_repository }} # e.g. 242787759841.dkr.ecr.ap-southeast-1.amazonaws.com/kidsloop-user-sre-dev | 494634321140.dkr.ecr.ap-northeast-2.amazonaws.com/vietnam-user-service
          tag: {{ .Values.live_frontend_image_tag }}
      - imagePullSecrets:
          - name: {{ .Values.live_frontend_image_pull_secrets }}
      - ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt"
          tls:
            - endpoint:
                hosts:
                  - live{{ .Values.kl_domain }}
                secretName: "letsencrypt-live{{ .Values.kl_domain }}"
          hosts:
            - host: live{{ .Values.kl_domain }}
              paths:
                - "/"
      - resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits:
            cpu: 200m
            memory: 400Mi

  # USER SERVICE
  # ---------------------------------------------------------------------------------------
  
  - name: user-service
    namespace: {{ .Values.k8s_namespace_kidsloop }}
    chart: ../charts/user-service
    values:
      - provider: {{ .Values.provider }}
      - serviceType: {{ .Values.k8s_service_type }}
      - image:
          repository: "{{ .Values.user_service_image_repository }}"
          tag: "{{ .Values.user_service_image_tag }}"
      - imagePullSecrets:
          - name: {{ .Values.user_service_image_pull_secrets }}
      - ingress:
          tls:
            - endpoint:
                hosts:
                  - api{{ .Values.kl_domain }}
                secretName: "letsencrypt-api{{ .Values.kl_domain }}"
          hosts:
            - host: api{{ .Values.kl_domain }}
              paths:
                - "/user"
      - domain: {{ .Values.domain }}
      {{- if eq .Values.provider "gcp" }}
      - project: {{ .Values.terraform_project }}
      - region: {{ .Values.terraform_region }}
      - postgresql_instance: {{ .Values.postgresql_database }}
      {{- end }}
      - resources:
          requests:
            cpu: 250m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi

  # AUTH-BACKEND
  # ---------------------------------------------------------------------------------------
  # 
  
  - name: auth-backend
    namespace: {{ .Values.k8s_namespace_kidsloop }}
    chart: ../charts/auth-backend
    values:
      - provider: {{ .Values.provider }}
      - serviceType: {{ .Values.k8s_service_type }}
      - imagePullSecrets:
          - name: {{ .Values.auth_backend_image_pull_secrets }}
      - image:
          repository: "{{ .Values.auth_backend_image_repository }}"
          tag: {{ .Values.auth_backend_image_tag }}
      - domain: {{ .Values.domain }}
      {{- if eq .Values.provider "gcp" }}
      - project: {{ .Values.terraform_project }}
      - region: {{ .Values.terraform_region }}
      - postgresql_instance: {{ .Values.postgresql_database }}
      {{- end }}
      - ingress:
          tls:
            - endpoint:
                hosts:
                  - auth{{ .Values.kl_domain }}      
                secretName: "letsencrypt-auth{{ .Values.kl_domain }}" 
          hosts:
            - host: auth{{ .Values.kl_domain }}
              paths:
                - "/"
      # auth-backend fails due to insuficient memory. That's why we don't set limits yet
      # - resources:
      #     requests:
      #       cpu: 100m
      #       memory: 400Mi
      #     limits:
      #       cpu: 200m
      #       memory: 800Mi


  # AUTH-FRONTEND
  # ---------------------------------------------------------------------------------------
  # 
  
  - name: auth-frontend
    namespace: {{ .Values.k8s_namespace_kidsloop }}
    chart: ../charts/auth-frontend
    values:
      - provider: {{ .Values.provider }}
      - serviceType: {{ .Values.k8s_service_type }}
      - imagePullSecrets:
          - name: {{ .Values.auth_frontend_image_pull_secrets }}
      - image:
          repository: "{{ .Values.auth_frontend_image_repository }}"
          tag: {{ .Values.auth_frontend_image_tag }}
      - ingress:
          tls:
            - endpoint:
                hosts:
                  - auth{{ .Values.kl_domain }}      
                secretName: "letsencrypt-auth{{ .Values.kl_domain }}" 
          hosts:
            - host: auth{{ .Values.kl_domain }}
              paths:
                - "/auth"
      - resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits:
            cpu: 200m
            memory: 400Mi



  # H5P SERVICE
  # ---------------------------------------------------------------------------------------
  
  - name: h5p-service
    namespace: {{ .Values.k8s_namespace_kidsloop }}
    chart: ../charts/h5p-service
    values:
      - provider: {{ .Values.provider }}
      - serviceType: {{ .Values.k8s_service_type }}
      - image:
          repository: {{ .Values.h5p_service_image_repository }}
          tag: {{ .Values.h5p_service_image_tag }}
      - imagePullSecrets:
          - name: {{ .Values.h5p_service_image_pull_secrets }}
      - ingress:
          tls:
            - endpoint:
                hosts:
                  - h5p{{ .Values.kl_domain }}
                secretName: "letsencrypt-h5p{{ .Values.kl_domain }}"
          hosts:
            - host: h5p{{ .Values.kl_domain }}
              paths:
                - "/"
      - domain: {{ .Values.domain }}
      - liveHost: live{{ .Values.kl_domain }}
      - xapi_endpoint: {{ .Values.h5p_xapi_endpoint }}
      {{ if .Values.h5p_storage }}
      - h5p_storage:
          mongodb_url: {{ .Values.mongodb.url }}
          mongodb_username: {{ .Values.mongodb.username }}
          mongodb_database: {{ .Values.mongodb.database }}
          mongodb_collection_name: {{ .Values.mongodb.collection_name }}
          endpoint: {{ .Values.h5p_storage.endpoint }}
          content_storage: {{ .Values.h5p_storage.content_storage }}
          content_storage_bucket: {{ .Values.h5p_storage.content_storage_bucket }}
          temporary_storage: {{ .Values.h5p_storage.temporary_storage }}
          temporary_storage_bucket: {{ .Values.h5p_storage.temporary_storage_bucket }}
      {{ end }}

      # TODO: performance testing or optimized performance the resources.
      # - resources: 
      #     requests:
      #       cpu: 200m
      #       memory: 1000Mi
      #     limits:
      #       cpu: 256m
      #       memory: 1024Mi