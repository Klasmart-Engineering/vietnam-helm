environments:
  vietnam-alpha:
    values:
      - ../../../env/vietnam-alpha/.env.yaml
  vietnam-beta:
    values:
      - ../../../env/vietnam-beta/.env.yaml
  vietnam-production:
    values:
      - ../../../env/vietnam-production/.env.yaml      
  indonesia-staging:
    values:
      - ../../../env/indonesia-staging/.env.yaml
  indonesia-production:
    values:
      - ../../../env/indonesia-production/.env.yaml
  indonesia-rk-prod:
    values:
      - ../../../env/indonesia-rk-prod/.env.yaml
  indonesia-rk-beta:
    values:
      - ../../../env/indonesia-rk-beta/.env.yaml
      
repositories:

  - name: ingress-nginx
    url: https://kubernetes.github.io/ingress-nginx

releases:

  # INGRESSES
  # ---------------------------------------------------------------------------------------
  # Only deploy to Bizflycloud - for other clouds deploy using cloud-native ingress
  # This provides an ingress endpoint for inbound traffic
  
  
  - name: ingress-nginx
    namespace: ingress-nginx
    createNamespace: true
    chart: ingress-nginx/ingress-nginx
    condition: helm_nginx_ingress.enabled
    version: 3.34.0
    values:
      - controller:
          replicaCount: 3
          config:
            ssl-redirect: "false"
            ssl-protocols: "SSLv3 TLSv1 TLSv1.1 TLSv1.2 TLSv1.3"
            ssl-ciphers: "HIGH:!aNULL:!MD5;"
            use-forwarded-headers: "true"
            forwarded-for-header: "true"
            proxy-add-original-uri-header: "true"
            use-gzip: "true"

          service:
            annotations:
              nginx.ingress.kubernetes.io/configuration-snippet: |
                more_set_headers "Access-Control-Allow-Origin: $http_origin";
              nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
              nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, DELETE, PATCH"
              nginx.ingress.kubernetes.io/enable-cors: "true"
              beta.cloud.google.com/backend-config: >
                {"ports": {"80": "nginx", "443": "nginx"}}
{{- if (or (.Values.helm_kube_monitoring.enabled) (.Values.helm_prometheus.enabled) ) }}
      - controller:
          metrics:
            # Additional config for NGINX service monitor (prometheus)
            # https://github.com/kubernetes/ingress-nginx/blob/master/charts/ingress-nginx/values.yaml#L571
            enabled: true
            serviceMonitor:
              enabled: true
              # additionalLabels: {}
              # The label to use to retrieve the job name from.
              # jobLabel: "app.kubernetes.io/name"
              namespace: ""
              namespaceSelector: {}
              # Default: scrape .Release.Namespace only
              # To scrape all, use the following:
              # namespaceSelector:
              #   any: true
              scrapeInterval: 30s
              # honorLabels: true
              targetLabels: []
              metricRelabelings: []

            prometheusRule:
              enabled: true
              # additionalLabels: {}
              # namespace: ""
              rules:
                # These are just examples rules, please adapt them to your needs
                - alert: NGINXConfigFailed
                  expr: count(nginx_ingress_controller_config_last_reload_successful == 0) > 0
                  for: 1s
                  labels:
                    severity: critical
                  annotations:
                    description: bad ingress config - nginx config test failed
                    summary: uninstall the latest ingress changes to allow config reloads to resume
                    dashboard: https://mon{{ .Values.kl_domain }}/grafana/d/nginx/nginx-ingress-controller?orgId=1&refresh=5s
                    runbook_url: https://kubernetes.github.io/ingress-nginx/troubleshooting/
                - alert: NGINXCertificateExpiry
                  expr: (avg(nginx_ingress_controller_ssl_expire_time_seconds) by (host) - time()) < 604800
                  for: 1s
                  labels:
                    severity: critical
                  annotations:
                    description: ssl certificate(s) will expire in less then a week
                    summary: renew expiring certificates to avoid downtime
                    dashboard: https://mon{{ .Values.kl_domain }}/grafana/d/nginx/nginx-ingress-controller?orgId=1&refresh=5s
                    runbook_url: https://kubernetes.github.io/ingress-nginx/troubleshooting/
                - alert: NGINXTooMany500s
                  expr: 100 * ( sum( nginx_ingress_controller_requests{status=~"5.+"} ) / sum(nginx_ingress_controller_requests) ) > 5
                  for: 1m
                  labels:
                    severity: warning
                  annotations:
                    description: Too many 5XXs
                    summary: More than 5% of all requests returned 5XX, this requires your attention
                    dashboard: https://mon{{ .Values.kl_domain }}/grafana/d/nginx/nginx-ingress-controller?orgId=1&refresh=5s
                    runbook_url: https://kubernetes.github.io/ingress-nginx/troubleshooting/
                - alert: NGINXTooMany400s
                  expr: 100 * ( sum( nginx_ingress_controller_requests{status=~"4.+"} ) / sum(nginx_ingress_controller_requests) ) > 5
                  for: 1m
                  labels:
                    severity: warning
                  annotations:
                    description: Too many 4XXs
                    summary: More than 5% of all requests returned 4XX, this requires your attention
                    dashboard: https://mon{{ .Values.kl_domain }}/grafana/d/nginx/nginx-ingress-controller?orgId=1&refresh=5s
                    runbook_url: https://kubernetes.github.io/ingress-nginx/troubleshooting/
{{- end }}

{{- if eq .Values.provider "gcp" }}
  - name: ingress-backend-config-nginx
    namespace: ingress-nginx
    chart:  ../charts/mono-ingress-backend-config-gcp
    values: 
      - name: nginx
  
  - name: ingress
    namespace: okc
    chart: ../charts/mono-ingress-gcp
    values:
      - domain: {{ .Values.kl_domain }}
{{- if eq .Values.provider "gcp" }}
      #Â RK - use H5P in SG
      - externalServices:
          h5p:
            enabled: true
{{- end }}

  - name: ingress-backend-config-hub
    namespace: okc
    chart:  ../charts/mono-ingress-backend-config-gcp
    values: 
      - name: hub
      - cdn:
          enabled: true
      - healthCheck:
          requestPath: /
          port: 80
  
  - name: ingress-backend-config-cms-frontend
    namespace: okc
    chart:  ../charts/mono-ingress-backend-config-gcp
    values: 
      - name: cms-frontend
      - cdn:
          enabled: true
      - healthCheck:
          requestPath: /
          port: 80
        
  - name: ingress-backend-config-cms-backend
    namespace: okc
    chart:  ../charts/mono-ingress-backend-config-gcp
    values: 
      - name: cms-backend
      - healthCheck:
          requestPath: /v1/ping
          port: 8088

  - name: ingress-backend-config-sfu-gateway
    namespace: okc
    chart:  ../charts/mono-ingress-backend-config-gcp
    values: 
      - name: sfu-gateway
      - healthCheck:
          requestPath: /server-health
          port: 8080

  - name: ingress-backend-config-live-backend
    namespace: okc
    chart:  ../charts/mono-ingress-backend-config-gcp
    values: 
      - name: live-backend
      - healthCheck:
          requestPath: /.well-known/apollo/server-health
          port: 8080

  - name: ingress-backend-config-live-frontend
    namespace: okc
    chart:  ../charts/mono-ingress-backend-config-gcp
    values: 
      - name: live-frontend
      - cdn:
          enabled: true
      - healthCheck:
          requestPath: /
          port: 80
  
  - name: ingress-backend-config-user-service
    namespace: okc
    chart:  ../charts/mono-ingress-backend-config-gcp
    values: 
      - name: user-service
      - healthCheck:
          requestPath: /.well-known/apollo/server-health
          port: 8080

  - name: ingress-backend-config-auth-frontend
    namespace: okc
    chart:  ../charts/mono-ingress-backend-config-gcp
    values: 
      - name: auth-frontend
      - cdn:
          enabled: true
      - healthCheck:
          requestPath: /
          port: 80
  
  - name: ingress-backend-config-auth-backend
    namespace: okc
    chart:  ../charts/mono-ingress-backend-config-gcp
    values: 
      - name: auth-backend
      - healthCheck:
          requestPath: /.well-known/express/server-health
          port: 8080

  - name: ingress-backend-config-h5p-xapi
    namespace: okc
    chart:  ../charts/mono-ingress-backend-config-gcp
    values: 
      - name: xapi
      - healthCheck:
          requestPath: /.well-known/apollo/server-health
          port: 8080

  - name: ingress-backend-config-assessment
    namespace: okc
    chart:  ../charts/mono-ingress-backend-config-gcp
    values: 
      - name: assessment
      - healthCheck:
          requestPath: /.well-known/apollo/server-health
          port: 8080

  {{- end}}
