environments:
  vietnam-alpha:
    values:
      - ../../../env/vietnam-alpha/.env.yaml
  vietnam-beta:
    values:
      - ../../../env/vietnam-beta/.env.yaml
  vietnam-loadtest:
    values:
      - ../../../env/vietnam-loadtest/.env.yaml
  vietnam-production:
    values:
      - ../../../env/vietnam-production/.env.yaml      
  indonesia-staging:
    values:
      - ../../../env/indonesia-staging/.env.yaml
  indonesia-production:
    values:
      - ../../../env/indonesia-production/.env.yaml
      
releases:
  - name: live-backend
    namespace: {{ .Values.k8s_namespace_kidsloop }}
    chart: ../charts/live-backend
    values:
      - provider: {{ .Values.provider }}
        deployment_name: {{ .Values.deployment_name }}
        deployment_region: {{ .Values.deployment_region }}
        deployment_env: {{ .Values.env }}
        serviceType: {{ .Values.k8s_service_type }}
        prometheus_enabled: {{ .Values.helm_prometheus.enabled }}
        image:
          repository: {{ .Values.live_backend_image_repository }} 
          tag: {{ .Values.live_backend_image_tag }}
        imagePullSecrets:
          - name: {{ .Values.live_backend_image_pull_secrets }}
        appVersion: {{ .Values.live_backend_appVersion }}
        assessmentGenerateTime: {{.Values.assessment_gen_time }}
        ingress:
          {{- if eq .Values.provider "gcp" }}
          annotations: 
            cert-manager.io/cluster-issuer: "letsencrypt"
            kubernetes.io/ingress.class: "nginx"
            ingress.kubernetes.io/enable-cors: "true"
            nginx.ingress.kubernetes.io/websocket-services: "live-backend-svc"
            nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
            nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
            nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
            nginx.ingress.kubernetes.io/send-timeout: "3600"
            nginx.ingress.kubernetes.io/ssl-redirect: "true"
            nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
          {{- end }}
          tls:
            - endpoint:
                hosts:
                  - live{{ .Values.kl_domain }}
                secretName: {{- if eq .Values.kl_domain ".kidsloop.vn" }} "wildcard-kidsloop-vn" {{- else }} "letsencrypt-live{{ .Values.kl_domain }}" {{- end }}
          hosts:
            - host: live{{ .Values.kl_domain }}
              paths:
                - "/graphql"
        resources:
          requests:
            cpu: 200m
            memory: 1Gi
          limits:
            cpu: 1000m
            memory: 2Gi
        {{- if eq .Values.provider "gcp" }}
        redisHost: {{ .Values.redis_host }}
        {{- else }} 
        redisHost: {{ .Values.redis_live_host }}
        {{- end }}  
        assessmentEndpoint: https://cms{{ .Values.kl_domain }}/v1/assessments
        studentReportEndpoint: https://cms{{ .Values.kl_domain }}/v1/student_usage_record/event
        attendanceServiceEndpoint: https://api{{ .Values.kl_domain }}/attendance
        postgresql_host: {{- if eq .Values.provider "gcp" }} "127.0.0.1" {{- else }} {{ .Values.postgresql_host }} {{- end }}
        postgresql_database: {{ .Values.postgresql_database }}
        postgresql_username: {{ .Values.postgresql_username }}
        {{- if eq .Values.provider "gcp" }}
        project: {{ .Values.terraform_project }}
        region: {{ .Values.terraform_region }}
        postgresql_instance: {{ .Values.postgresql_database }}
        {{ end }}
        liveJwtKey:
          enabled: true
          existingSecretName: live-jwt-credentials
          passphrase:
            enabled: true
            secretFieldRef: "private_passphrase"
        autoscaling:
          enabled: true
          minReplicas: {{ .Values.live_backend_min_replica_count }}
          maxReplicas: {{ .Values.live_backend_max_replica_count }}
