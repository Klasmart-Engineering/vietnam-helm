environments:
  vietnam-alpha:
    values:
      - ../../../env/vietnam-alpha/.env.yaml
  vietnam-beta:
    values:
      - ../../../env/vietnam-beta/.env.yaml
  vietnam-production:
    values:
      - ../../../env/vietnam-production/.env.yaml      
  indonesia-staging:
    values:
      - ../../../env/indonesia-staging/.env.yaml
  indonesia-production:
    values:
      - ../../../env/indonesia-production/.env.yaml
  indonesia-rk-prod:
    values:
      - ../../../env/indonesia-rk-prod/.env.yaml
  indonesia-rk-beta:
    values:
      - ../../../env/indonesia-rk-beta/.env.yaml
      
releases:
  - name: pdf-service
    namespace: {{ .Values.k8s_namespace_kidsloop }}
    chart: ../charts/pdf-service
    values:
      - provider: {{ .Values.provider }}
        deployment_name: {{ .Values.deployment_name }}
        deployment_region: {{ .Values.deployment_region }}
        deployment_env: {{ .Values.env }}
        serviceType: {{ .Values.k8s_service_type }}
        prometheus_enabled: {{ .Values.helm_prometheus.enabled }}
        image:
          repository: {{ .Values.pdf_service_image_repository }} 
          tag: {{ .Values.pdf_service_image_tag }}
        imagePullSecrets:
          - name: {{ .Values.pdf_service_image_pull_secrets }}
        appVersion: {{ .Values.pdf_service_appVersion }}
        ingress:
          {{- if eq .Values.provider "gcp" }}
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt"
            kubernetes.io/ingress.class: "nginx"
            ingress.kubernetes.io/enable-cors: "true"
            nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
            nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
            nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
            nginx.ingress.kubernetes.io/send-timeout: "3600"
            nginx.ingress.kubernetes.io/ssl-redirect: "true"
            nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
          {{- else }}
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt"
            nginx.ingress.kubernetes.io/configuration-snippet: |
              if ($request_method = OPTIONS) {
                more_set_headers "Access-Control-Allow-Origin: $allowed_origin";
                more_set_headers "Access-Control-Allow-Headers: Content-Type";
                return 200;
              }
              more_set_headers "Access-Control-Allow-Origin: $allowed_origin";
              more_set_headers "Access-Control-Allow-Credentials: true";
            nginx.ingress.kubernetes.io/proxy-body-size: 512m          
          {{- end }}
          tls:
            - endpoint:
                hosts:
                  - live{{ .Values.kl_domain }}
                hosts_api:
                  - api{{ .Values.kl_domain }}                  
                secretName: {{- if eq .Values.kl_domain ".kidsloop.vn" }} "wildcard-kidsloop-vn" {{- else }} "letsencrypt-live{{ .Values.kl_domain }}" {{- end }}
                secretName_api: {{- if eq .Values.kl_domain ".kidsloop.vn" }} "wildcard-kidsloop-vn" {{- else }} "letsencrypt-api{{ .Values.kl_domain }}" {{- end }}
          hosts:
            - host: live{{ .Values.kl_domain }}
              host_api: api{{ .Values.kl_domain }}
              paths:
                - "/pdf/"
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        pdf_bucket: {{ .Values.storage.pdf_bucket }}
        pdf_bucket_region: {{ .Values.storage.region }}
        pdf_bucket_endpoint: {{ .Values.storage.endpoint }}    
        cms_base_url: {{- if eq .Values.provider "gcp" }} {{ .Values.storage.cdn_live }} {{- else }} https://live{{ .Values.kl_domain }} {{- end }}
        postgresql_host: {{- if eq .Values.provider "gcp" }} "127.0.0.1" {{- else }} {{ .Values.postgresql_host }} {{- end }}
        postgresql_database: {{ .Values.postgresql_database }}
        postgresql_username: {{ .Values.postgresql_username }}
        kl_domain: {{ .Values.domain }}
        {{- if eq .Values.provider "gcp" }}
        project: {{ .Values.terraform_project }}
        region: {{ .Values.terraform_region }}
        postgresql_instance: {{ .Values.postgresql_database }}
        {{ end }}
        autoscaling:
          enabled: true
          minReplicas: {{ .Values.pdf_service_min_replica_count }}
          maxReplicas: {{ .Values.pdf_service_max_replica_count }}
