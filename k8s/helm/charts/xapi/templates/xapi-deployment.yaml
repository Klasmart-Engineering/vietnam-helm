apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "xapi.fullname" . }}
  labels:
    {{- include "xapi.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "xapi.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "xapi.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        #command: [ "/bin/bash", "-c", "--" ]
        #args: [ "while true; do sleep 30; done;" ]
        ports:
          - name: http
            protocol: TCP
            containerPort: 8080
        startupProbe:
          httpGet:
            path: /.well-known/apollo/server-health
            port: http
          failureThreshold: 30
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /.well-known/apollo/server-health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /.well-known/apollo/server-health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
        env:
          - name: POSTGRES_DB_SECRET
            valueFrom:
              secretKeyRef:
                name: postgresql
                key: postgresql-password
          - name: XAPI_DATABASE_URL
            value: "postgres://{{ .Values.postgresql_username }}:$(POSTGRES_DB_SECRET)@{{ .Values.postgresql_xapi_host }}/{{ .Values.postgresql_xapi_database }}"
          - name: NODE_ENV
            value: "{{  .Values.deployment_env }}"
          - name: DOMAIN
            value: {{ .Values.domain }}
          - name: PORT
            value: "8080"
          - name: ROUTE_PREFIX
            value: "/xapi"
          - name: AWS_REGION
            value: {{ .Values.aws_region }}
          - name: DYNAMODB_TABLE_NAME
            value: {{ .Values.dynamodb_table_name }}
          - name: ELASTICSEARCH_USERNAME
            value: {{ .Values.elasticsearch_username }}
          - name: FIREHOSE_STREAM_NAME
            value: {{ .Values.firehose_steam_name }}
          - name: ELASTICSEARCH_URL
            valueFrom:
              secretKeyRef:
                name: elasticsearch
                key: elasticsearch-url
          - name: ELASTICSEARCH_PASSWORD
            valueFrom:
              secretKeyRef:
                name: elasticsearch
                key: elasticsearch-password
          - name: NEW_RELIC_NO_CONFIG_FILE
            value: "true"
          - name: NEW_RELIC_APP_NAME
            value: {{ include "xapi.fullname" . }}_{{  .Values.deployment_name }}
          - name: NEW_RELIC_DISTRIBUTED_TRACING_ENABLED
            value: "true"
          - name: NEW_RELIC_LABELS
            value: Deployment:{{  .Values.deployment_name }};Region:{{  .Values.deployment_region }};Environment:{{  .Values.deployment_env }};Version:{{  .Values.image.tag }};Component:{{ include "xapi.fullname" . }}
          - name: NEW_RELIC_LICENSE_KEY
            valueFrom:
              secretKeyRef:
                name: newrelic-apikey-secret
                key: NEW_RELIC_LICENSE_KEY
        volumeMounts:
          - name: xapi-dynamodb-secret
            mountPath: /root/.aws
            readOnly: true
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      
      {{- if eq .Values.provider "gcp" }}
      - name: cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.19.1
        command:
          - "/cloud_sql_proxy"
          - "-ip_address_types=PRIVATE"
          - "-instances={{ .Values.project }}:{{ .Values.region }}:{{ .Values.postgresql_instance }}=tcp:5432"
        securityContext:
          runAsNonRoot: true
        resources:
          {{- toYaml .Values.sqlProxy.resources | nindent 12 }} 
      {{- end }}
      volumes:
        - name: xapi-dynamodb-secret
          secret:
            secretName: xapi-dynamodb-secret
      {{- if eq .Values.provider "gcp" }}
      serviceAccountName: cloudsql-proxy
      {{- end }}
