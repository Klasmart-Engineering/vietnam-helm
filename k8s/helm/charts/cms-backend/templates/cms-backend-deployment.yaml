apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cms-backend.fullname" . }}
  labels:
    {{- include "cms-backend.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "cms-backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "cms-backend.selectorLabels" . | nindent 8 }}
        redis-client: "true"
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/cms-backend-configmap.yaml") . | sha256sum }}
    spec:
      {{- if .Values.hostNetworking }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if eq .Values.provider "vngcloud" }}
      initContainers:
      - name: {{ .Chart.Name }}-init
        image: flyway/flyway:latest
        args:
          - "migrate"
          - "-user=$(db_username)"
          - "-url=jdbc:mysql://$(db_hostname):$(db_port)/$(db_name)"
          - "-password=$(MYSQL_PASSWORD)"
        env:
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql
                key: mysql-password
        envFrom:
          - configMapRef:
              name: {{ include "cms-backend.fullname" . }}-cm
        volumeMounts:
          - name: sql-migration
            mountPath: /flyway/sql
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        command: [ "sh", "-c" ]
        args:
        {{- if eq .Values.provider "gcp" }}
        - |
          export connection_string="$(db_username):$(MYSQL_PASSWORD)@tcp(localhost:$(db_port))/$(db_name)?$(db_options)"
          ./handler
        {{- else }}
        - |
          export connection_string="$(db_username):$(MYSQL_PASSWORD)@tcp($(db_hostname):$(db_port))/$(db_name)?$(db_options)"
          ./handler
        {{- end }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        ports:
          - name: http
            protocol: TCP
            containerPort: 8088
        startupProbe:
          httpGet:
            path: /v1/ping
            port: http
          failureThreshold: 30
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /v1/ping
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /v1/ping
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
        envFrom:
          - configMapRef:
              name: {{ include "cms-backend.fullname" . }}-cm
        env:
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql
                key: mysql-password
        {{ if .Values.configuration.storage_endpoint }}
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: cms-backend-s3-secret
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: cms-backend-s3-secret
                key: secret_access_key
        {{ end }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      {{- if eq .Values.provider "gcp" }}
      - name: cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.19.1
        command:
          - "/cloud_sql_proxy"
          - "-ip_address_types=PRIVATE"
          - "-instances={{ .Values.project }}:{{ .Values.region }}:{{ .Values.mysql_instance }}=tcp:{{ .Values.configuration.db_port }}"
        securityContext:
          runAsNonRoot: true
        resources:
          {{- toYaml .Values.sqlProxy.resources | nindent 12 }}
      {{- end }}

      # volumes:
      #   {{ if .Values.configuration.storage_endpoint }}
      #   - name: s3-bucket-secret
      #     secret:
      #       secretName: {{ include "cms-backend.fullname" . }}-s3-secret
      #   {{ end }}
      {{- if eq .Values.provider "vngcloud" }}
      volumes:
        - name: sql-migration
          configMap:
            name: {{ include "cms-backend.fullname" . }}-sql-cm
      {{- end }}
      {{- if eq .Values.provider "gcp" }}
      serviceAccountName: cloudsql-proxy
      {{- end }}

