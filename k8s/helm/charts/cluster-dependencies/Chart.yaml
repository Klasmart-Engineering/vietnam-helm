apiVersion: v2
name: cluster-dependencies
description: All cluster-level dependencies for KidsLoop K8 clusters on AWS

# A chart can be either an 'application' or a 'library' chart.
#
# Application charts are a collection of templates that can be packaged into versioned archives
# to be deployed.
#
# Library charts provide useful utilities or functions for the chart developer. They're included as
# a dependency of application charts to inject those utilities and functions into the rendering
# pipeline. Library charts do not define any templates and therefore cannot be deployed.
type: application

# This is the chart version. This version number should be incremented each time you make changes
# to the chart and its templates, including the app version.
# Versions are expected to follow Semantic Versioning (https://semver.org/)
version: 0.1.3

# This is the version number of the application being deployed. This version number should be
# incremented each time you make changes to the application. Versions are not expected to
# follow Semantic Versioning. They should reflect the version the application is using.
# It is recommended to use it with quotes.

# appVersion: Upgrade in line with k8 version
appVersion: "1.19.0"

dependencies:

# # Sets up intra-pod networking, network security policies and pod IPs
# - name: aws-calico
#   version: "0.3.5"
#   repository: https://aws.github.io/eks-charts
#   condition: calico.enabled
#  deploy directly from helmfile/tf

# Manages ALB and NLB resources for Kubernetes
- name: aws-load-balancer-controller
  version: "1.2.0"  # chart 1.2.0 corresponds with app version 2.2.0
  repository: https://aws.github.io/eks-charts
  condition: aws-load-balancer-controller.enabled

# Full monitoring stack for k8, includes prometheus, operator, grafana, alertmanager, dashboards etc..
- name: kube-prometheus-stack
  version: "16.0.1"
  repository: https://prometheus-community.github.io/helm-charts
  condition: kube-prometheus-stack.enabled

# Loki stack (Loki and Promtail) - collects logs, ingests into S3 with metadata, makes logs searchable within cluster.
# Integrates nicely with kube-prometheus-stack.
- name: loki-stack
  version: "2.4.1"
  repository: https://grafana.github.io/helm-charts
  condition: loki-stack.enabled

# Jaeger tracing - can collect, store, search and visualise opentracing spans. Useful for instrumenting applications.
- name: jaeger
  version: "0.46.0"
  repository: https://jaegertracing.github.io/helm-charts
  condition: jaeger.enabled

# Handles frontend ingress logic with NGINX
- name: ingress-nginx
  version: "3.31.0"
  repository: https://kubernetes.github.io/ingress-nginx
  condition: ingress-nginx.enabled

# Cluster autoscaler
# https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md
- name: cluster-autoscaler
  version: "9.9.2"
  repository: https://kubernetes.github.io/autoscaler
  condition: cluster-autoscaler.enabled

# External DNS controller
# https://github.com/bitnami/charts/tree/master/bitnami/external-dns
- name: external-dns
  version: "5.0.3"
  repository: https://charts.bitnami.com/bitnami
  condition: external-dns.enabled

# # Cert manager
# # https://cert-manager.io/docs/installation/kubernetes/
# - name: cert-manager
#   version: 1.3.1
#   repository: https://charts.jetstack.io
#   condition: cert-manager.enabled
# deploy directly from helmfile/tf

# TODO - external-dns, CSI driver?
