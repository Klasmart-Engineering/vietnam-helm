apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "spr_api.fullname" . }}
  labels:
    {{- include "spr_api.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "spr_api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "spr_api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        #command: [ "/bin/bash", "-c", "--" ]
        #args: [ "while true; do sleep 30; done;" ]
        ports:
          - name: http
            protocol: TCP
            containerPort: 8080
        startupProbe:
          httpGet:
            path: /ping
            port: http
          failureThreshold: 30
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /ping
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /ping
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
        env:
          - name: NODE_ENV
            value: "{{ .Values.deployment_env }}"
          - name: PORT
            value: "8080"
          - name: ADMIN_SERVICE_URL
            value: "{{ .Values.user_service_endpoint }}"
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef:
                name: spr-api-database-url
                key: DATABASE_URL
          - name: SHOW_SWAGGER
            value: "{{ .Values.show_swagger }}"
          - name: NEW_RELIC_DISTRIBUTED_TRACING_ENABLED
            value: "true"
          - name: LOG_STYLE
            value: "NEW_RELIC"
          - name: NEW_RELIC_NO_CONFIG_FILE
            value: "true"
          - name: NEW_RELIC_APP_NAME
            value: {{ include "spr_api.fullname" . }}_{{ .Values.deployment_name }}
          - name: NEW_RELIC_DISTRIBUTED_TRACING_ENABLED
            value: "true"
          - name: NEW_RELIC_LABELS
            value: Deployment:{{ .Values.deployment_name }};Region:{{ .Values.deployment_region }};Environment:{{ .Values.deployment_env }};Version:{{ .Values.image.tag }};Component:{{ include "spr_api.fullname" . }}
          - name: NEW_RELIC_LICENSE_KEY
            valueFrom:
              secretKeyRef:
                name: newrelic-apikey-secret
                key: NEW_RELIC_LICENSE_KEY
          - name: SPS_INTERVAL_IN_DAYS
            value: "7"
        {{- if eq .Values.provider "gcp" }}
          - name: STORAGE_GOOGLE_KEY_FILE_NAME
            value: /key/key.json
        volumeMounts:
          - name: whitelabel-storage-sa-key
            mountPath: /key
            readOnly: true
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}

      {{- if eq .Values.provider "gcp" }}
      - name: cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.19.1
        command:
          - "/cloud_sql_proxy"
          - "-ip_address_types=PRIVATE"
          - "-instances={{ .Values.project }}:{{ .Values.region }}:{{ .Values.postgresql_instance }}=tcp:5432"
        securityContext:
          runAsNonRoot: true
        resources:
          {{- toYaml .Values.sqlProxy.resources | nindent 12 }}
      serviceAccountName: cloudsql-proxy
      volumes:
        - name: whitelabel-storage-sa-key
          secret:
            secretName: whitelabel-bucket
      {{- end }}
