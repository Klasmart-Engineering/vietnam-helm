apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "sfu.fullname" . }}-cm
data:
  job.yaml: |
    apiVersion: batch/v1
    kind: Job
    metadata:
      name: {{ include "sfu.fullname" . }}
      labels:
        {{- include "sfu-job.labels" . | nindent 8 }}
    spec:
      template:
        metadata:
          labels:
            {{- include "sfu.selectorLabels" . | nindent 12 }}
            redis-client: "true"
        spec:
          {{- if .Values.hostNetworking }}
          hostNetwork: true
          dnsPolicy: ClusterFirstWithHostNet
          {{- end }}
          {{- with .Values.sfuImage.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          restartPolicy: OnFailure
          containers:
          - name: {{ .Chart.Name }}
            image: "{{ .Values.sfuImage.repository }}:{{ .Values.sfuImage.tag | default .Chart.AppVersion }}"
            imagePullPolicy: "{{ .Values.sfuImage.pullPolicy }}"
            command: [ "sh", "-c" ]
            args:
            - |
              export PUBLIC_ADDRESS=$(curl icanhazip.com) && echo "PUBLIC_ADDRESS: $PUBLIC_ADDRESS" && \
              export HOSTNAME_OVERRIDE={{ if .Values.usePodIpAsHostnameOverride }}$POD_IP{{ else }}$POD_NAME.$SERVICE_NAME.$POD_NAMESPACE.svc.cluster.local{{ end }} && \
              echo "HOSTNAME_OVERRIDE: $HOSTNAME_OVERRIDE";
              npm start
            env:
              - name: NODE_ENV
                value: "beta"
              - name: REDIS_HOST
                value: {{ .Values.redisHost }}
              - name: REDIS_PORT
                value: {{ .Values.redisPort | quote }}
              - name: NUM_CPU_CORES
                value: "1"  
              - name: POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              - name: POD_IP
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
              - name: POD_NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              - name: SERVICE_NAME
                value: {{ include "sfu.fullname" . }}
{{- if .Values.useIp }}
              - name: USE_IP
                #Â If set, then the SFU gateway will use the 'PUBLIC_ADDRESS' to connect to the SFU pod for routing websocket traffic.
                value: "1"
{{- end }}
            resources:
              {{- toYaml .Values.resources | nindent 16 }}
  config: |
    {{- toPrettyJson .Values.sfuManagerConfiguration | nindent 4 }}
