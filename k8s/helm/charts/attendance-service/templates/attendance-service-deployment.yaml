apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "attendance_service.fullname" . }}
  labels:
    {{- include "attendance_service.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "attendance_service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "attendance_service.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        #command: [ "/bin/bash", "-c", "--" ]
        #args: [ "while true; do sleep 30; done;" ]
        ports:
          - name: http
            protocol: TCP
            containerPort: 8080
        startupProbe:
          httpGet:
            path: /.well-known/apollo/server-health
            port: http
          failureThreshold: 30
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /.well-known/apollo/server-health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /.well-known/apollo/server-health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
        env:
          - name: ASSESSMENT_ENDPOINT
            value: https://api.{{ .Values.domain}}/assessment
          - name: DB_SECRET
            valueFrom:
              secretKeyRef:
                name: postgresql
                key: postgresql-password
          - name: POSTGRES_DATABASE_URL
            value: "postgres://{{ .Values.postgresql_username }}:$(DB_SECRET)@{{ .Values.postgresql_host }}/{{ .Values.postgresql_database }}"
          - name: NEW_RELIC_NO_CONFIG_FILE
            value: "true"
          - name: NEW_RELIC_APP_NAME
            value: {{ include "attendance_service.fullname" . }}_{{  .Values.deployment_name }}
          - name: NEW_RELIC_DISTRIBUTED_TRACING_ENABLED
            value: "true"
          - name: NEW_RELIC_LABELS
            value: Deployment:{{  .Values.deployment_name }};Region:{{  .Values.deployment_region }};Environment:{{  .Values.deployment_env }};Version:{{  .Values.image.tag }};Component:{{ include "attendance_service.fullname" . }}
          - name: NEW_RELIC_LICENSE_KEY
            valueFrom:
              secretKeyRef:
                name: newrelic-apikey-secret
                key: NEW_RELIC_LICENSE_KEY
          - name: REDIS_HOST
            value: {{ .Values.redis_host }}
          - name: REDIS_PORT
            value: "6379"
          # The issuer is set to kidsloop in other services, but it MUST be set to kidsloop-live in this service
          {{- if .Values.liveJwtKey.enabled }}
          - name: JWT_ISSUER
            value: "kidsloop-live"
          - name: JWT_ALGORITHM
            valueFrom:
              secretKeyRef:
                name: live-jwt-credentials
                key: jwt-algorithm
          - name: JWT_PRIVATE_KEY_FILENAME
            value: /key/private_key
          - name: JWT_PUBLIC_KEY_FILENAME
            value: /key/public_key
          {{- if .Values.liveJwtKey.passphrase.enabled }}
          - name: JWT_PRIVATE_KEY_PASSPHRASE
            {{- if .Values.liveJwtKey.passphrase.literal }}
            value: {{ .Values.liveJwtKey.passphrase.literal }}
            {{- else }}
            valueFrom:
              secretKeyRef:
                name: live-jwt-credentials
                key: {{ .Values.liveJwtKey.passphrase.secretFieldRef }}
            {{- end }}
          {{- end }}
          {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.liveJwtKey.enabled }}
        volumeMounts:
          - name: live-jwt-credentials
            mountPath: /key
            readOnly: true
        {{- end }}
      {{- if .Values.liveJwtKey.enabled }}
      volumes:
        - name: live-jwt-credentials
          secret:
            secretName: {{ .Values.liveJwtKey.existingSecretName }}
      {{- end }}
