apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mono-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/enable-cors: "true"
    kubernetes.io/ingress.global-static-ip-name: "ingress-https-load-balancer"
    networking.gke.io/managed-certificates: mono-ingress
    kubernetes.io/ingress.allow-http: "false"
    cert-manager.io/cluster-issuer: "letsencrypt"
    nginx.ingress.kubernetes.io/websocket-services: "live-frontend-svc,live-backend-svc,sfu-gateway-svc"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/send-timeout: "3600"

spec:
  tls:
    - hosts:
      - hub{{ .Values.domain }}
      - cms{{ .Values.domain }}
      - live{{ .Values.domain }}
      - auth{{ .Values.domain }}
      - api{{ .Values.domain }}
      secretName: tls-secret

  rules:
    - host: hub{{ .Values.domain }}
      http:
        paths:
          - path: /
            backend:
              serviceName: hub-svc
              servicePort: 80

    - host: cms{{ .Values.domain }}    
      http:
        paths:
          - path: /
            backend:
              serviceName: cms-frontend-svc
              servicePort: 80

          - path: /v1/
            backend:
              serviceName: cms-backend-svc
              servicePort: 80
    
    - host: live{{ .Values.domain }}    
      http:
        paths:
          - path: /
            backend:
              serviceName: live-frontend-svc
              servicePort: 80

          # - path: /static/  # Where does static come from?
          #   backend:
          #     serviceName: live-frontend-svc
          #     servicePort: 80

          - path: /sfu/
            backend:
              serviceName: sfu-gateway-svc
              servicePort: 80

          - path: /graphql  # Important! No trailing /
            backend:
              serviceName: live-backend-svc
              servicePort: 80

    - host: api{{ .Values.domain }}    
      http:
        paths:
          - path: /user
            backend:
              serviceName: user-service-svc
              servicePort: 80
          #- path: /user/
          #  backend:
          #    serviceName: user-service-svc
          #    servicePort: 80
          - path: /xapi
            backend:
              serviceName: xapi-svc
              servicePort: 80
          - path: /assessment
            backend:
              serviceName: assessment-svc
              servicePort: 80

    - host: auth{{ .Values.domain }}    
      http:
        paths:
          - path: /
            backend:
              serviceName: auth-frontend-svc
              servicePort: 80

          - path: /refresh
            backend:
              serviceName: auth-backend-svc
              servicePort: 80

          - path: /signout
            backend:
              serviceName: auth-backend-svc
              servicePort: 80

          - path: /transfer
            backend:
              serviceName: auth-backend-svc
              servicePort: 80

          - path: /switch
            backend:
              serviceName: auth-backend-svc
              servicePort: 80
