apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "user_service.fullname" . }}
  labels:
    {{- include "user_service.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "user_service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "user_service.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        #command: [ "/bin/bash", "-c", "--" ]
        #args: [ "while true; do sleep 30; done;" ]
        ports:
          - name: http
            protocol: TCP
            containerPort: 8080
        env:
          - name: NODE_ENV
            value: "beta"
          - name: DOMAIN
            value: {{ .Values.domain }}
          - name: PORT
            value: "8080"
          - name: ROUTE_PREFIX
            value: "/user"
          - name: POSTGRES_USERNAME
            value: "{{ .Values.postgresql_username }}"
          {{- if eq .Values.provider "gcp" }}
          - name: POSTGRES_DOMAIN
            value: "127.0.0.1"
          {{- else }}
          - name: POSTGRES_DOMAIN
            value: "{{ .Values.postgresql_host }}"
          {{- end }}
          - name: POSTGRES_PORT
            value: "5432"
          - name: POSTGRES_DB
            value: "{{ .Values.postgresql_database }}"
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgresql
                key: postgresql-password
            
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      
      {{- if eq .Values.provider "gcp" }}
      - name: cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.19.1
        command:
          - "/cloud_sql_proxy"
          - "-ip_address_types=PRIVATE"
          - "-instances={{ .Values.project }}:{{ .Values.region }}:{{ .Values.postgresql_instance }}=tcp:5432"
        securityContext:
          runAsNonRoot: true  
      {{- end }}

      {{- if eq .Values.provider "gcp" }}
      serviceAccountName: cloudsql-proxy
      {{- end }}