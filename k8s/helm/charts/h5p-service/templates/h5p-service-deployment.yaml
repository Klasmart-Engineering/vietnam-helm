apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "h5p_service.fullname" . }}
  labels:
    {{- include "h5p_service.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "h5p_service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "h5p_service.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        #command: [ "/bin/bash", "-c", "--" ]
        #args: [ "while true; do sleep 30; done;" ]
        ports:
          - name: http
            protocol: TCP
            containerPort: 8080
        env:
          - name: DOMAIN
            value: {{ .Values.domain }}
          - name: NODE_ENV
            value: "beta"
          - name: XAPI_ENDPOINT
            value: {{ .Values.xapi_endpoint }}
          {{ if .Values.h5p_storage }}
          - name: CONTENTSTORAGE
            value: {{ .Values.h5p_storage.content_storage }}
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: h5p-s3-secret
                key: aws-access-key-id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: h5p-s3-secret
                key: aws-secret-access-key
          - name: AWS_S3_ENDPOINT
            value: {{ .Values.h5p_storage.endpoint }}
          - name: AWS_REGION
            value: {{ .Values.h5p_storage.region }}
          - name: CONTENT_AWS_S3_BUCKET
            value: {{ .Values.h5p_storage.content_storage_bucket }}
          - name: TEMPORARYSTORAGE
            value: {{ .Values.h5p_storage.temporary_storage }}
          - name: TEMPORARY_AWS_S3_BUCKET
            value: {{ .Values.h5p_storage.temporary_storage_bucket }}
          - name: MONGODB_URL
            value: {{ .Values.h5p_storage.mongodb_url }}/{{ .Values.h5p_storage.mongodb_database }}
          - name: MONGODB_DB
            value: {{ .Values.h5p_storage.mongodb_database }}
          - name: MONGODB_USER
            value: {{ .Values.h5p_storage.mongodb_username }}
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: h5p-mongodb-secret
                key: mongodb-password
          - name: CONTENT_MONGO_COLLECTION
            value: {{ .Values.h5p_storage.mongodb_collection_name }}
          - name: MEDIA_STORAGE_SERVICE_ENDPOINT
            value: {{ .Values.media_storage_endpoint }}
          {{ end }}
          - name: NEW_RELIC_NO_CONFIG_FILE
            value: "true"
          - name: NEW_RELIC_APP_NAME
            value: {{ include "h5p_service.fullname" . }}_{{  .Values.deployment_name }}
          - name: NEW_RELIC_DISTRIBUTED_TRACING_ENABLED
            value: "true"
          - name: NEW_RELIC_LABELS
            value: Deployment:{{  .Values.deployment_name }};Region:{{  .Values.deployment_region }};Environment:{{  .Values.deployment_env }};Version:{{  .Values.image.tag }};Component:{{ include "h5p_service.fullname" . }}
          - name: NEW_RELIC_LICENSE_KEY
            valueFrom:
              secretKeyRef:
                name: newrelic-apikey-secret
                key: NEW_RELIC_LICENSE_KEY
          - name: CACHE
            value: "redis"
          - name: LOCK
            value: "redis"
          - name: LOCK_REDIS_DB
            value: "1"
          - name: LOCK_REDIS_HOST
            value: {{ .Values.redis_host }}
          - name: LOCK_REDIS_PORT
            value: "6379"
          - name: LOG_LEVEL
            value: "debug"
          - name: LOG_STYLE
            value: "NEW_RELIC"
          - name: REDIS_DB
            value: "0"
          - name: REDIS_HOST
            value: {{ .Values.redis_host }}
          - name: REDIS_PORT
            value: "6379"
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      
      {{- if eq .Values.provider "gcp" }}
      - name: cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.19.1
        command:
          - "/cloud_sql_proxy"
          - "-ip_address_types=PRIVATE"
          - "-instances={{ .Values.project }}:{{ .Values.region }}:{{ .Values.postgresql_instance }}=tcp:5432"
        securityContext:
          runAsNonRoot: true  
      {{- end }}

      {{- if eq .Values.provider "gcp" }}
      serviceAccountName: cloudsql-proxy
      {{- end }}
